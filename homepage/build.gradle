if (isModule.toBoolean()) {
    apply plugin: 'com.android.library'
} else {
    apply plugin: 'com.android.application'
}

android {
    compileSdkVersion BUILD_VERSIONS.COMPILE_SDK
    buildToolsVersion BUILD_VERSIONS.BUILD_TOOLS


    defaultConfig {
        if (!isModule.toBoolean()) {
            applicationId "com.fenda.homepage"
        }
        flavorDimensions "default"
        minSdkVersion BUILD_VERSIONS.MIN_SDK
        targetSdkVersion BUILD_VERSIONS.TARGET_SDK
        versionCode BUILD_VERSIONS.VERSION_CODE
        versionName BUILD_VERSIONS.VERSION_NAME

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {

            annotationProcessorOptions {

                arguments = [moduleName: project.getName()]

            }
        }
    }

    sourceSets {
        main {
            if (isModule.toBoolean()) {
                manifest.srcFile "src/main/module/AndroidManifest.xml"

                //集成开发模式下排除debug文件夹中的所有Java文件
                java {
                    exclude 'debug/**'
                }
            } else {
                manifest.srcFile "src/main/AndroidManifest.xml"
            }
        }
    }
    productFlavors {
        _dev {//开发环境
            //设置baseUrl 使用方法Application.getContext().getResources().getString(R.string.API_SERVER)
            resValue "string", "BASE_SERVER_URL", "http://192.168.43.37:8998/smartsound/"
            resValue "string", "TCP_IP", "192.168.43.37"
            resValue "string", "DEVICE_SN", " "
        }

        _test {//测试环境
            resValue "string", "BASE_SERVER_URL", "http://192.168.100.127:8998/smartsound/"
            resValue "string", "TCP_IP", "192.168.100.127"
            resValue "string", "DEVICE_SN", " "
        }

        _prod {//正式环境
            resValue "string", "BASE_SERVER_URL", "https://ai.fenda.com/smartsound/"
            resValue "string", "TCP_IP", "47.106.223.29"
            resValue "string", "DEVICE_SN", "-pro"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    annotationProcessor deps.arouter_compiler
    implementation project(path: ':common')
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
}
