if (isModule.toBoolean()) {
    apply plugin: 'com.android.library'
    apply from : 'maven_config.gradle'
} else {
    apply plugin: 'com.android.application'
}



android {
    compileSdkVersion BUILD_VERSIONS.COMPILE_SDK
    buildToolsVersion BUILD_VERSIONS.BUILD_TOOLS

    defaultConfig {
        if(!isModule.toBoolean()){
            applicationId "com.fenda.news"
        }
        minSdkVersion BUILD_VERSIONS.MIN_SDK
        targetSdkVersion BUILD_VERSIONS.TARGET_SDK
        versionCode BUILD_VERSIONS.VERSION_CODE
        versionName BUILD_VERSIONS.VERSION_NAME

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {

            annotationProcessorOptions {

                arguments = [AROUTER_MODULE_NAME: project.getName()]

            }
        }
    }
    sourceSets {
        main {
            if (isModule.toBoolean()) {
                manifest.srcFile "src/main/module/AndroidManifest.xml"
                //集成开发模式下排除debug文件夹中的所有Java文件
                java {
                    exclude 'debug/**'
                }

            } else {
                manifest.srcFile "src/main/AndroidManifest.xml"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    //打包main目录下代码和资源的 task
    task androidSourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
//    if (isLocalMaven.toBoolean()){
//        implementation deps.fenda_common_local
//    }else {
//        implementation deps.fenda_common
//    }
    implementation project(path: ':common')
    annotationProcessor deps.arouter_compiler
}
